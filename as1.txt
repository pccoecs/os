#include<stdio.h>
#include<sys/wait.h>
#include <unistd.h>
#include<stdlib.h>
int main(){
  pid_t pid;
  int status;
  pid = fork();
  if(pid<0){
    fprintf(stderr,"error\n");
    return 1;
  }
  else if(pid == 0){
    printf("child process\n");
    printf("pid:%d\n",getpid());
    execlp("cp","cp","source.txt","destination.txt", NULL);
    perror("exe");
    exit(1);
  }
  else{
    printf("parent\n");
    wait(&status);
    printf("Te process id to be waited is %d\n",getpid());
    printf("child process executed with status\n",WEXITSTATUS(status));
  }

  if(pid<0){
    fprintf(stderr,"error\n");
    return 1;
  }
  else if(pid == 0){
    printf("processid:%d\n",getpid());
    execlp("grep","grep","-c","main",NULL);
    perror("exe");
    exit(1);
    
  }
  else{
    printf("parent\n");
    wait(&status);
    printf("Te process id to be waited is %d\n",getpid());
    printf("child process executed with status\n",WEXITSTATUS(status));
    
  }

  return 0;
}